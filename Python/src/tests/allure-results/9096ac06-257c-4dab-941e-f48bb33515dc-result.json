{"name": "test_end_to_end", "status": "failed", "statusDetails": {"message": "AssertionError: 'https://www.saucedemo.com/checkout-step-two.html' != 'https://www.saucedemo.com/checkout-complete.html'\n- https://www.saucedemo.com/checkout-step-two.html\n?                                    ^  -----\n+ https://www.saucedemo.com/checkout-complete.html\n?                                    ^^^^^^", "trace": "self = <src.tests.error_user_test.TestLogIn testMethod=test_end_to_end>\n\n    def test_end_to_end(self):\n    \n        login_page = LoginPage(self.driver)\n        inventory_page = InventoryPage(self.driver)\n        cart_page = CartPage(self.driver)\n        checkout_step_one_page = CheckoutStepOnePage(self.driver)\n        checkout_step_two_page = CheckoutStepTwoPage(self.driver)\n        check_out_complete_page = CheckoutCompletePage(self.driver)\n    \n    \n        # Login Page\n        self.driver.get(\"https://www.saucedemo.com/\")\n        username_placeholder = self.driver.find_element(By.ID, \"user-name\").get_attribute(\"placeholder\")\n        password_placeholder = self.driver.find_element(By.ID, \"password\").get_attribute(\"placeholder\")\n    \n        self.assertEqual(username_placeholder, \"Username\", \"Placeholder for username incorrect.\")\n        self.assertEqual(password_placeholder, \"Password\", \"Placeholder for password incorrect.\")\n        self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/\")\n    \n        login_page.set_text_in_username_box(\"error_user\")\n        login_page.set_text_in_password_box(\"secret_sauce\")\n        login_page.click_login_button()\n    \n        # Inventory Page\n        self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/inventory.html\")\n        inventory_page.click_onesie_clothing_button()\n        inventory_page.click_fleece_jacket_clothing_button()\n        inventory_page.click_shopping_cart_button()\n    \n        # Cart Page\n        self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/cart.html\")\n        cart_page.click_checkout_button()\n    \n        # Checkout Step One Page\n        self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/checkout-step-one.html\")\n        checkout_step_one_page.set_text_in_first_name_box(\"John\")\n        checkout_step_one_page.set_text_in_last_name_box(\"Doe\")\n        checkout_step_one_page.set_text_in_postal_code_box(\"12345\")\n        checkout_step_one_page.click_continue_button()\n    \n        # Checkout Step Two Page\n        self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/checkout-step-two.html\")\n        checkout_step_two_page.click_finish_button()\n    \n        # Checkout Complete Page\n>       self.assertEqual(self.driver.current_url, \"https://www.saucedemo.com/checkout-complete.html\")\nE       AssertionError: 'https://www.saucedemo.com/checkout-step-two.html' != 'https://www.saucedemo.com/checkout-complete.html'\nE       - https://www.saucedemo.com/checkout-step-two.html\nE       ?                                    ^  -----\nE       + https://www.saucedemo.com/checkout-complete.html\nE       ?                                    ^^^^^^\n\nerror_user_test.py:71: AssertionError"}, "start": 1704229519395, "stop": 1704229523662, "uuid": "252793c7-feed-43ae-ac64-67a4168d1f33", "historyId": "71405b9635dde7e88dbb64850fc1fc8c", "testCaseId": "71405b9635dde7e88dbb64850fc1fc8c", "fullName": "error_user_test.TestLogIn#test_end_to_end", "labels": [{"name": "suite", "value": "error_user_test"}, {"name": "subSuite", "value": "TestLogIn"}, {"name": "host", "value": "LaptopJorge"}, {"name": "thread", "value": "4092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "error_user_test"}]}